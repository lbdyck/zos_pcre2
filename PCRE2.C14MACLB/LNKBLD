         MACRO
         LNKBLD  &START=,&END=,&NEXT=,&PREV=,&LENGTH=,&LOC=,           /
               &REG=,&COUNT=
.**********************************************************************
.*
.*       This macro builds a linked list of getmained storage.
.*
.*       &START=     holds the address of the first area
.*       &END=       holds the address of the last area
.*       &NEXT=      pointer to the next area from this one
.*       &PREV=      pointer to the previous are from this one
.*       &LENGTH=    length of the getmained area
.*       &LOC=       24, 31, ANY
.*       &REG=       general purpose register to use
.*       &COUNT=     counter to increment - fullword
.*
.*       &END, &PREV and &COUNT are optional
.*
         AIF   (T'&START  EQ 'O').NOSTART  * parameter missing
         AIF   (T'&NEXT   EQ 'O').NONEXT   * parameter missing
         AIF   (T'&LENGTH EQ 'O').NOLEN    * parameter missing
         AIF   (T'&REG    EQ 'O').NOREG    * parameter missing
.*
         LAY   R1,&LENGTH                  * length of storage area
         STORAGE OBTAIN,LENGTH=(R1),LOC=&LOC
         NC    &START,&START               * check anchor is 0
         JNZ   A&SYSNDX
         ST    R1,&START                   * save address in start
         XR    &REG,&REG                   * set current to 0
         J     B&SYSNDX
A&SYSNDX       DS    0H
         ST    R1,&NEXT                    * save address in current
B&SYSNDX       DS    0H
         AIF   (T'&END    EQ 'O').NOEND
         ST    R1,&END                     * set last area address
.NOEND   ANOP
         AIF   (T'&PREV   EQ 'O').NOPREV
         LR    R0,&REG                     * copy current address
         LR    &REG,R1                     * point to new area
         LR    R14,&REG                    * copy address
         LAY   R15,&LENGTH                 * get length
         XR    R1,R1                       * set fill character + len
         MVCL  R14,R0                      * wipe to low values
         ST    R0,&PREV                    * set prev area address
         AGO   .ENDPREV
.NOPREV  ANOP
         LR    &REG,R1                     * point to new area
         LR    R14,&REG                    * copy address
         LAY   R15,&LENGTH                 * get length
         XR    R1,R1                       * set fill character + len
         MVCL  R14,R0                      * wipe to low values
.ENDPREV ANOP
.*
         AIF   (T'&COUNT  EQ 'O').NOCOUNT
         L     R1,&COUNT                   * get count of entries
         LA    R1,1(,R1)                   * add 1
         ST    R1,&COUNT                   * save count of entries
.NOCOUNT ANOP
.*
         MEXIT
.NOSTART MNOTE 16,'Start anchor not provided'
         MEXIT
.NONEXT  MNOTE 16,'Next field not provided'
         MEXIT
.NOLEN   MNOTE 16,'Length not provided'
         MEXIT
.NOREG   MNOTE 16,'Register not provided'
         MEND
