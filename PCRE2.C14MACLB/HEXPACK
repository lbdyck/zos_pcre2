         MACRO
         HEXPACK &IN,&INL,&OUT
.**********************************************************************
.*
.* September 2015 - John Gateley - Create
.*
.*       This macro packs character hexadecimal data into a string.
.*       so C'C1F16D' becomes X'C1F16D' or C'A1_'
.*
.*       In the above example
.*       HEXPACK =C'C1F16D',6,OUT_TXT
.*
.*       If the input length is of the form L'AAA then it cannot be
.*       checked here, but if it is not then see if even.
.*
.*
.* indicate that HEXPACK macro was used so that the table can be
.* defined in PRGESTAT
.*
         GBLC  &HEXPCK
&HEXPCK  SETC  'Y'
         AIF   ('&INL'(1,2) EQ 'L''').NOCHK
&A       SETA  &INL                      * copy length
&B       SETA  &A/2                      * divide by 2
&C       SETA  &B*2                      * multiply by 2
         AIF   (&A NE &C).NOTEVEN        * not equal means not even
.*
.NOCHK   ANOP
         LA    R14,&IN                   * address of input string
         LA    R15,&INL                  * length of input string
         LA    R1,&OUT                   * address of output area
B#&SYSNDX      DS    0H
         MVC   HEXPACK_W3(2),0(R14)      * copy two bytes
         TR    HEXPACK_W3(2),HEXPACK_TABLE-C'A' * Convert to packable
         PACK  HEXPACK_W2,HEXPACK_W3     * pack it
         MVC   0(1,R1),HEXPACK_W2        * output one byte
         LA    R14,2(R14)                * next in input
         LA    R1,1(R1)                  * next in output
         AHI   R15,-2                    * subtract the 2 processed
         BP    B#&SYSNDX                 * positive then go again
         MEXIT
.NOTEVEN MNOTE 16,'Length specified is not multiple of 2'
         MEND
