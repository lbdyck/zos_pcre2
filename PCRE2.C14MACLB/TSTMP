         MACRO
         TSTMP &AREA,&LOCAL=N,&FORMAT=DB2
.**********************************************************************
.*
.* Created by John Gateley
.*
.*       This macro uses STCKE to get the time from the system
.*       and then formats it.
.*
.*       &AREA   =  the field to put the timestamp in
.*       &LOCAL  =  N - just get the timestamp
.*                  Y - adjust to local time and leap second
.*       &FORMAT =  DB2  - CL26'2017-04-01-12.34.56.789012'
.*                  CHAR - CL20'20170401123456789012'
.*                  PACK - PL11'020170401123456789012C'
.*
.*       TSTMP WS_TIMESTAMP
.*
         GBLC  &USETSTMP
&USETSTMP      SETC  'Y'
.*
         STCKE #MVCLSAV                store time in PRGDEF field
.*
         AIF   ('&LOCAL' EQ 'Y').YESLOC
         AIF   ('&LOCAL' EQ 'N').NOLOC
         MNOTE 16,' Invalid LOCAL specified'
         MEXIT
.YESLOC  ANOP
*        L     R1,CVTPTR               point to CVT
         L     R1,16
*        L     R1,CVTEXT2-CVT(,R1)     point to extension 2
         L     R1,328(,R1)
*        USING CVTXTNT2,R1
*        LG    R14,CVTLDTO
         LG    R14,56(,R1)             adjust local time
*        SG    R14,CVTLSO
         SG    R14,80(,R1)             adjust leap seconds
*        DROP  R1
         LMG   R0,R1,#MVCLSAV          load STCKE output
         LGR   R15,R14
         SRAG  R14,R14,8
         SLLG  R15,R15,(64-8)
         ALGR  R1,R15
         ALCGR R0,R14
         STMG  R0,R1,#MVCLSAV          save amended STCKE output
.NOLOC   ANOP
.*
.*      STCKCONV STCKEVAL=#MVCLSAV,CONVVAL=#MVCLSAV,TIMETYPE=DEC,     /
         STCKCONV STCKEVAL=#MVCLSAV,CONVVAL=#MVCLSAV,TIMETYPE=DEC,     /
               DATETYPE=YYYYMMDD,MF=(E,MY_PARM)
         MVC   #STRING_WORK(4),#MVCLSAV+8    put in correct order
         MVC   #STRING_WORK+4(6),#MVCLSAV
         MVI   #STRING_WORK+10,X'0F'
.*
         AIF   ('&FORMAT' EQ 'DB2').DODB2
         AIF   ('&FORMAT' EQ 'CHAR').DOCHAR
         AIF   ('&FORMAT' EQ 'PACK').DOPACK
         MNOTE 16,' Invalid FORMAT specified'
         MEXIT
.*
.DOCHAR  ANOP
         MVC   #MVCLSAV(11),#STRING_WORK     copy out of the way
         UNPK  #STRING_WORK(15),#MVCLSAV(8)
         UNPK  #STRING_WORK+14(7),#MVCLSAV+7(4)
         MVC   &AREA.(20),#STRING_WORK
         MEXIT
.*
.DOPACK  ANOP
         SRP   #STRING_WORK(11),64-1,0       shift right 1 digit
         MVC   &AREA.(11),#STRING_WORK
         MEXIT
.*
.DODB2   ANOP
         MVC   #MVCLSAV(11),#STRING_WORK     copy out of the way
         MVI   #STRING_WORK,C' '
         MVC   #STRING_WORK+1(L'#STRING_WORK-1),#STRING_WORK
         MVC   #STRING_WORK(L'##DAT_PAT),##DAT_PAT
         ED    #STRING_WORK(L'##DAT_PAT),#MVCLSAV
         MVC   &AREA.(26),#STRING_WORK+1
.*
         MEND
