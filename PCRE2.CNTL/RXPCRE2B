/*REXX*/

  the_str1 = "The quick brown fox jumps over the lazy dog."
  the_str1 = the_str1||"The quick brown fox jumps over the"
  the_str2 = "The brown quick fox over the lazy dog jumps."
  the_str2 = the_str2||"The brown quick fox over the jumps"
  the_str3 = "The slow brown fox walks past the lazy dog."
  the_str4 = "The slow brown fox walks quickly past the lazy dog."

  reg_ex_9  = "(?<char>A)\g<char>"    /* ||'00'x */
  the_str9  = "AN_AARDWARK_JAKE_AND_a AARDWARK_JACK"
  the_str9a = "ANnn_AARDWARK_JAKE_AND_a lower AARDWARK_JACK"
  opt_ion_9 = "gix"
  reg_ex  = "(quick|jump)"            /* ||'00'x */
  my_stem = "WANG"
  opt_ion = "g"

/*
  say '  '

  say ' first the old version +++++++++++++++++++++++++++ '

  say '  '


  say reg_ex
  say the_str1

  re_sponse = REXXPCRE(reg_ex,the_str1,my_stem,opt_ion,,'debug')

  select
     when re_sponse = 1 then do
        say 'wang.0  is  ' wang.0
        do lo_op_r = 1 to wang.0
           var_1  =  substr(wang_string.lo_op_r,1,30)
           var_2  =  substr(wang_pos.lo_op_r,1,10)
           var_3  =  wang_name.lo_op_r
           say  var_1 var_2 var_3
        end
       end
     when re_sponse = 0 then
        say 'no matches found'
     Otherwise
        say 'Error :' re_sponse
  end


  reg_ex  = "(quick|jump)"
  opt_ion = "g"

  say reg_ex
  say the_str2

  re_sponse = REXXPCRE(reg_ex,the_str2,my_stem,opt_ion,,'debug')

  select
     when re_sponse = 1 then do
        say 'wang.0  is  ' wang.0
        do lo_op_r = 1 to wang.0
           var_1  =  substr(wang_string.lo_op_r,1,30)
           var_2  =  substr(wang_pos.lo_op_r,1,10)
           var_3  =  wang_name.lo_op_r
           say  var_1 var_2 var_3
        end
       end
     when re_sponse = 0 then
        say 'no matches found'
     Otherwise
        say 'Error :' re_sponse
  end


  say '  '

  say ' now the new version +++++++++++++++++++++++++++ '

  say '  '
*/
  my_stem = "wang"

  re_sponse = RXPCRE2('connect','pcre_env',,'debug')

  if re_sponse \= 0 then exit

  say 'pcre_env     = ' pcre_env

  re_sponse = RXPCRE2('compile',pcre_env,reg_ex,'pcre_comp',opt_ion)

  if re_sponse \= 0 then exit

  say 'pcre_comp    = ' pcre_comp

  re_sponse = RXPCRE2('compile',pcre_env,reg_ex_9,,
                      'pcre_comp_9',opt_ion_9)

  if re_sponse \= 0 then exit

  say 'pcre_comp_9  = ' pcre_comp_9

  /*
     so now we have 2 seperate compilations which we should be
     able to use alternately
  */

  say '  '
  say reg_ex
  say the_str1

  /* note the double comma to tell rexx the parameters are
     continued on the next line                               */

  pcre_exec = RXPCRE2('execute',pcre_env,pcre_comp,,
                      the_str1,my_stem)

  say 'pcre_exec    = ' pcre_exec

  say 'wang.0      is  ' wang.0
  say 'wang_pos.0  is  ' wang_pos.0

  select
     when pcre_exec = 1 then do
        say 'wang.0  is  ' wang.0
        do lo_op_r = 1 to wang.0
           var_1  =  substr(wang_string.lo_op_r,1,30)
           var_2  =  substr(wang_pos.lo_op_r,1,10)
           var_3  =  wang_name.lo_op_r
           say  var_1 var_2 var_3
        end
       end
     when pcre_exec = 0 then
        say 'no matches found'
     Otherwise
        say 'Error :' pcre_exec
  end

  say ' '
  say reg_ex_9
  say the_str9

  pcre_exec_9 = RXPCRE2('execute',pcre_env,pcre_comp_9,,
                        the_str9,my_stem)

  say 'pcre_exec_9  = ' pcre_exec_9

  say 'wang.0      is  ' wang.0
  say 'wang_pos.0  is  ' wang_pos.0

  select
     when pcre_exec_9 = 1 then do
        say 'wang.0  is  ' wang.0
        do lo_op_r = 1 to wang.0
           var_1  =  substr(wang_string.lo_op_r,1,30)
           var_2  =  substr(wang_pos.lo_op_r,1,10)
           var_3  =  wang_name.lo_op_r
           say  var_1 var_2 var_3
        end
       end
     when pcre_exec_9 = 0 then
        say 'no matches found'
     Otherwise
        say 'Error :' pcre_exec_9
  end

  say ' '
  say reg_ex
  say the_str2


  pcre_exec = RXPCRE2('execute',pcre_env,pcre_comp,the_str2,my_stem)

  say 'pcre_exec    = ' pcre_exec

  say 'wang.0      is  ' wang.0
  say 'wang_pos.0  is  ' wang_pos.0

  select
     when pcre_exec = 1 then do
        say 'wang.0  is  ' wang.0
        do lo_op_r = 1 to wang.0
           var_1  =  substr(wang_string.lo_op_r,1,30)
           var_2  =  substr(wang_pos.lo_op_r,1,10)
           var_3  =  wang_name.lo_op_r
           say  var_1 var_2 var_3
        end
       end
     when pcre_exec = 0 then
        say 'no matches found'
     Otherwise
        say 'Error :' pcre_exec
  end

  say ' '
  say reg_ex_9
  say the_str9a

  pcre_exec_9 = RXPCRE2('execute',pcre_env,pcre_comp_9,,
                        the_str9a,my_stem)

  say 'pcre_exec_9  = ' pcre_exec_9

  say 'wang.0      is  ' wang.0
  say 'wang_pos.0  is  ' wang_pos.0

  select
     when pcre_exec_9 = 1 then do
        say 'wang.0  is  ' wang.0
        do lo_op_r = 1 to wang.0
           var_1  =  substr(wang_string.lo_op_r,1,30)
           var_2  =  substr(wang_pos.lo_op_r,1,10)
           var_3  =  wang_name.lo_op_r
           say  var_1 var_2 var_3
        end
       end
     when pcre_exec_9 = 0 then
        say 'no matches found'
     Otherwise
        say 'Error :' pcre_exec_9
  end

  say ' '
  say reg_ex
  say the_str3

  pcre_exec = RXPCRE2('execute',pcre_env,pcre_comp,the_str3,my_stem)

  say 'pcre_exec    = ' pcre_exec

  say 'wang.0      is  ' wang.0
  say 'wang_pos.0  is  ' wang_pos.0

  select
     when pcre_exec = 1 then do
        say 'wang.0  is  ' wang.0
        do lo_op_r = 1 to wang.0
           var_1  =  substr(wang_string.lo_op_r,1,30)
           var_2  =  substr(wang_pos.lo_op_r,1,10)
           var_3  =  wang_name.lo_op_r
           say  var_1 var_2 var_3
        end
       end
     when pcre_exec = 0 then
        say 'no matches found'
     Otherwise
        say 'Error :' pcre_exec
  end

  say ' '
  say reg_ex
  say the_str4

  pcre_exec = RXPCRE2('execute',pcre_env,pcre_comp,the_str4,my_stem)

  say 'pcre_exec    = ' pcre_exec

  say 'wang.0      is  ' wang.0
  say 'wang_pos.0  is  ' wang_pos.0

  select
     when pcre_exec = 1 then do
        say 'wang.0  is  ' wang.0
        do lo_op_r = 1 to wang.0
           var_1  =  substr(wang_string.lo_op_r,1,30)
           var_2  =  substr(wang_pos.lo_op_r,1,10)
           var_3  =  wang_name.lo_op_r
           say  var_1 var_2 var_3
        end
       end
     when pcre_exec = 0 then
        say 'no matches found'
     Otherwise
        say 'Error :' pcre_exec
  end


  say ' '

  re_lease  = RXPCRE2('release',pcre_env,pcre_comp)

  say 're_lease     = ' re_lease

  say ' '

  re_lease_9 = RXPCRE2('release',pcre_env,pcre_comp_9)

  say 're_lease_9   = ' re_lease

  say ' '

  te_rm     = RXPCRE2('disconnect',pcre_env)

  say 'te_rm        = ' te_rm

  exit

